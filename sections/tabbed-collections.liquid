{%- liquid

  assign section_padding = ''
  if section.settings.section_padding == 'top'
    assign section_padding = 'pb0'
  elsif section.settings.section_padding == 'bottom'
    assign section_padding = 'mt0'
  elsif section.settings.section_padding == 'none'
    assign section_padding = 'mt0 pb0'
  endif

-%}

<section class="global__section tabbed-collections {{ section_padding }}"
  data-section-id="{{ section.id }}"
  data-section-type="featured-collections"
  data-aos="fade">
  <div class="row grid__wrapper">
    {% if section.settings.heading != blank %}
    <div class="span-12 auto">
      <h2 class="section-heading mb0">{{ section.settings.heading | escape }}</h2>
    </div>
    {% endif %}
    {% if section.blocks.size == 0 %}
      {% render 'no-blocks' %}
    {% else %}
      <div class="tabbed__collections-{{ section.id }} span-12 auto js-tabbed-collection-container">
        {% if section.blocks.size > 1 %}
        <ul class="tabbed__collection-tabs" id="tabbed-collections-{{ section.id }}">
          {% for block in section.blocks %}
            {%- assign collection = collections[block.settings.collection] -%}
            {% if collection != blank %}
              <li{{ block.shopify_attributes }} data-tab-index="{{ forloop.index0 }}"><a class="js-tab-trigger" data-content="{{ block.id }}-tab-{{ forloop.index }}" href="#{{ block.id }}-tab-{{ forloop.index }}">{{ collection.title }}</a></li>
            {% else %}
              <li{{ block.shopify_attributes }} data-tab-index="{{ forloop.index0 }}">
                <a class="js-tab-trigger" data-content="{{ block.id }}-tab-{{ forloop.index }}" href="#{{ block.id }}-tab-{{ forloop.index }}">
                  Collection {{ forloop.index }}
                </a>
              </li>
            {% endif %}
          {% endfor %}
        </ul>
        <div class="clear"></div>
        {% endif %}
        {% for block in section.blocks %}
          {%- liquid
            assign prod_limit = block.settings.limit
            assign grid = block.settings.grid
            assign collection = collections[block.settings.collection]
          -%}

          {% capture slideshow_config %}{
            "wrapAround":true,
            "imagesLoaded":true,
            "cellAlign": "left",
            "dragThreshold":"15",
            "pauseAutoPlayOnHover":false,
            "prevNextButtons":true,
            "pageDots": false
         }{% endcapture %}
          <div class="tabbed__collection-content tabbed__collection-{{ block.id }} js-tab-collection-content" id="{{ block.id }}-tab-{{ forloop.index }}" {{ block.shopify_attributes }}>

            {%- liquid
              if block.settings.limit <= block.settings.grid
                assign is_carousel = false
              else
                assign is_carousel = true
              endif
            -%}
            <div class="featured__collection-carousel flickity__section product-loop {% if is_carousel %}js-carousel{% endif %}"
            {% if is_carousel %}
              data-flickity='{{ slideshow_config }}'
            {% endif %}>
              {% if collection == blank %}
                {% render 'onboard-product', prod_limit: prod_limit, grid: grid %}
              {% else %}
                {% for product in collection.products limit: prod_limit %}
                  <div id="product-listing-{{ product.id }}" class="featured__collection-product product-index" data-product-id="{{ product.id }}" data-alpha="{{ product.title }}" data-price="{{ product.price }}">
                    {% render 'product-listing', product: product, collection: collection %}
                  </div>
                {% endfor %}
              {% endif %}
            </div>

            {%- liquid
              case block.settings.grid
                when 2
                assign prod_grid = 50
                when 3
                assign prod_grid = 33.333
                when 4
                assign prod_grid = 25
                when 5
                assign prod_grid = 20
              endcase
            -%}

            <style>
              {% unless is_carousel %}
                .tabbed__collection-{{ block.id }} .featured__collection-carousel {
                  display: flex;
                }
              {% endunless %}

              .tabbed__collection-{{ block.id }} .featured__collection-carousel .featured__collection-product {
                width: {{ prod_grid }}%;
              }
            </style>
          </div>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</section>

{% schema %}
{
  "name": "Tabbed collections",
  "max_blocks": 3,
  "settings": [{
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Tabbed collections"
    }
  ],
  "blocks": [{
    "type": "featured_collection",
    "name": "Collection",
    "settings": [{
        "label": "Collection",
        "id": "collection",
        "type": "collection"
      },
      {
        "type": "range",
        "id": "grid",
        "min": 2,
        "max": 5,
        "step": 1,
        "label": "Product grid",
        "default": 4
      },
      {
        "type": "range",
        "id": "limit",
        "min": 2,
        "max": 20,
        "step": 1,
        "label": "Products shown",
        "default": 12
      },
      {
        "type": "select",
        "id": "section_padding",
        "label": "Section spacing",
        "options": [
          {
            "value": "top",
            "label": "Top"
          },
          {
            "value": "bottom",
            "label": "Bottom"
          },
          {
            "value": "both",
            "label": "Both"
          },
          {
            "value": "none",
            "label": "None"
          }
        ],
        "default": "bottom"
      }
    ]
  }],
  "presets": [{
    "name": "Tabbed collections",
    "settings": {},
    "blocks": [{
        "type": "featured_collection"
      },
      {
        "type": "featured_collection"
      }
    ]
  }],
  "templates": ["404", "article", "blog", "cart", "collection", "list-collections", "index", "page", "product", "search"]
}
{% endschema %}
